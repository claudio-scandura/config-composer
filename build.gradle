buildscript {
    ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
}

allprojects {
    
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "checkstyle"
    apply plugin: "signing"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"
        testImplementation "org.assertj:assertj-core:3.10.0"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    }
    
    checkstyle {
        toolVersion = "8.17"
        maxWarnings = 0
        maxErrors = 0
    }

    tasks.withType(Checkstyle) {

        reports {
            xml.enabled false
            html.enabled true
        }
    }

    test {
        useJUnitPlatform()

        maxParallelForks = Runtime.runtime.availableProcessors()

        reports {
            junitXml.enabled = false
            html.enabled = true
        }

        // show standard out and standard error of the test JVM(s) on the console
        testLogging {
            showStandardStreams = project.hasProperty("show-logs")
            events 'PASSED', 'FAILED', 'SKIPPED'
        }

        afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTest result: ${result.resultType}"
                println "Test summary: ${result.testCount} tests, " +
                        "${result.successfulTestCount} succeeded, " +
                        "${result.failedTestCount} failed, " +
                        "${result.skippedTestCount} skipped"
            }
        }
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }

    publishing {

        publications {
            mavenJava(MavenPublication) {
                groupId 'com.mylaesoftware'
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'Config Composer'
                    description = 'A library to auto generate code for Lightbend/Typesafe configuration handling'
                    url = 'https://github.com/claudio-scandura/config-composer'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://github.com/claudio-scandura/config-composer/blob/master/LICENSE.md'
                        }
                    }
                    developers {
                        developer {
                            id = 'claudio-scandura'
                            name = 'Claudio Scandura'
                            email = 'cl.scandura@gmail.com'
                        }
                    }
                }
            }
        }
    }

    tasks.withType(Sign) {
        onlyIf { isReleaseVersion }
    }

    signing {
        sign publishing.publications.mavenJava
    }

}


wrapper {
    gradleVersion = '5.2'
}
